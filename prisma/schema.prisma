// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DELIVERER
}

enum DeliveryStatus {
  Aguardando
  Retirada
  Entregue
  Devolvida
}

model User {
  id       String   @id @default(uuid())
  name     String
  cpf      String   @unique
  password String
  role     UserRole @default(DELIVERER)

  delivery     Delivery[]
  Notification Notification[]

  @@map("users")
}

model Delivery {
  id          String         @id @default(uuid())
  title       String
  description String
  recipientId String         @map("recipient_id")
  courierId   String         @map("courier_id")
  latitude    Decimal
  longitude   Decimal
  status      DeliveryStatus
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime?      @updatedAt @map("updated_at")

  courier       User                   @relation(fields: [courierId], references: [id])
  recipient     Recipient              @relation(fields: [recipientId], references: [id])
  attachments   Attachment[]
  statusUpdates DeliveryStatusUpdate[]

  @@map("delivery")
}

model Recipient {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  localization String

  delivery             Delivery[]
  deliveryStatusUpdate DeliveryStatusUpdate[]

  @@map("recipients")
}

model Attachment {
  id          String    @id @default(uuid())
  title       String
  url         String
  deliverieId String?   @map("deliverer_id")
  deliverie   Delivery? @relation(fields: [deliverieId], references: [id])

  @@map("attachments")
}

model DeliveryStatusUpdate {
  id          String    @id @default(uuid())
  title       String
  content     String
  status      String
  recipientId String    @map("recipient_id")
  deliveryId  String    @map("delivery_id")
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  recipient Recipient @relation(fields: [recipientId], references: [id])
  delivery  Delivery  @relation(fields: [deliveryId], references: [id])

  @@map("delivery_status")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  content     String
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  recipient   User      @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}
